#!/usr/bin/env bash

echo -e "Installing Elixir"

echo -e "\tSetting up asdf"
asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git >/dev/null 2>&1
asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git >/dev/null 2>&1

# Set the containing directory for later use
versions_dir="${HOME}/.dotfiles/installer/versions"

# Read given file line by line
function read_file {
  versions_dir=${1}
  local file_path="${versions_dir}"
  while read -r line
  do
    echo -e "${line}"
  done < "${file_path}"
}

function install_versions {
  local language="${1}"
  local versions_list=$(read_file "${versions_dir}/${language}")
  for version in ${versions_list}; do
    echo -e "\t\tInstalling ${version} for ${language}"
    asdf install $language ${version} >/dev/null 2>&1
    local status=$?
    if [ ${status} -ne "0" ]; then
      echo "Last exit code was ${status} for 'asdf install ${language} ${version}'. Please run manually. Aborting."
      exit 1
    fi
  done
  set_global ${language} ${version}
}

function set_global {
  local language=${1}
  local latest_version=${2}
  echo -e "\t\tSetting ${language} ${latest_version} as global"
  asdf global ${language} ${latest_version} >/dev/null 2>&1
}


echo -e "\tInstalling versions"
brew install autoconf wxmac openssl fop coreutils automake libyaml readline libxslt libtool unixodbc unzip curl >/dev/null 2>&1
export CFLAGS="-O2 -g -fno-stack-check"
export KERL_CONFIGURE_OPTIONS="--disable-hipe --with-ssl=$(brew --prefix openssl)"
install_versions "erlang"
install_versions "elixir"
