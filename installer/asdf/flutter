#!/usr/bin/env bash

echo -e "Installing flutter"

echo -e "\tSetting up asdf"
asdf plugin-add flutter >/dev/null 2>&1

# Set the containing directory for later use
versions_dir="${HOME}/.dotfiles/installer/versions/flutter"

# Read given file line by line
function read_file {
  local file_path="${versions_dir}"
  while read -r line
  do
    echo -e "${line}"
  done < "${file_path}"
}

# Install list of versions one by one
function install_versions {
  local versions_list=$(read_file)
  for version in ${versions_list}; do
    echo -e "\t\tInstalling ${version}"
    asdf install flutter ${version} >/dev/null 2>&1
    local status=$?
    if [ ${status} -ne "0" ]; then
      echo "Last exit code was ${status} for 'asdf install flutter ${version}'. Please run manually. Aborting."
      exit 1
    fi
  done
  # Set the latest version as global
  set_global ${version}
}

function set_global {
  local latest_version=${1}
  echo -e "\tSetting ${latest_version} as global"
  asdf global flutter ${latest_version} >/dev/null 2>&1
}

echo -e "\tInstalling versions"
install_versions 

echo -e "\tSetting up environment"

echo -e "\t\tSetting up iOS environment"
echo -e "\t\t\tSetting up Xcode"
sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer >/dev/null 2>&1
if [ $? -ne "0" ]; then
  echo -e "You need to install full Xcode first to continue!"
else
  sudo xcodebuild -runFirstLaunch
  echo -e "\t\t\tSetting up cocoapods"
  gem install cocoapods >/dev/null 2>&1
fi

echo -e "\t\tSetting up Android environment"
echo -e "\t\t\tInstalling Android Studio"
brew cask install android-studio >/dev/null 2>&1

echo -e "\tThere are likely manual step required"
echo -e "\tInstallation status"
flutter doctor
